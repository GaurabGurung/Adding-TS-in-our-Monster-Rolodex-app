{"ast":null,"code":"var _jsxFileName = \"/Users/gaurabgurung/Documents/JS Projects/Adding TypeScript in our Monster Rolodex App/src/App.js\",\n  _s = $RefreshSig$();\nimport { Component } from \"react\";\nimport SearchBox from './components/search-box/search-box.component';\nimport './App.css';\nimport CardList from \"./components/card-list/card-list.component\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [searchField, setSearchField] = useState(''); //[value, setValue]\n  const [monsters, setMonsters] = useState([]);\n  const [filteredMonsters, setFilterMonsters] = useState(monsters);\n  console.log('render');\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => setMonsters(users));\n  }, []);\n  useEffect(() => {\n    const filteredMonsters = monsters.filter(monster => {\n      return monster.name.toLocaleLowerCase().includes(searchField);\n    });\n    setFilterMonsters(filteredMonsters);\n    console.log('filtering');\n  }, [monsters, searchField]);\n  const onSearchChange = event => {\n    const searchFieldString = event.target.value.toLocaleLowerCase();\n    setSearchField(searchFieldString);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \" Monsters Rolodex \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      onChangeHandler: onSearchChange,\n      placeHolder: \" search monsters \",\n      className: \" monsters-search-box \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      monsters: filteredMonsters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"x+7VBGrap1NfOQPZEdIst1lqVXw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Component","SearchBox","CardList","useState","useEffect","jsxDEV","_jsxDEV","App","_s","searchField","setSearchField","monsters","setMonsters","filteredMonsters","setFilterMonsters","console","log","fetch","then","response","json","users","filter","monster","name","toLocaleLowerCase","includes","onSearchChange","event","searchFieldString","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChangeHandler","placeHolder","_c","$RefreshReg$"],"sources":["/Users/gaurabgurung/Documents/JS Projects/Adding TypeScript in our Monster Rolodex App/src/App.js"],"sourcesContent":["import { Component } from \"react\";\n\nimport SearchBox from './components/search-box/search-box.component';\nimport './App.css'  \nimport CardList from \"./components/card-list/card-list.component\";\n\n\nimport { useState , useEffect } from \"react\";\n\nconst App = () => {\n  const [searchField , setSearchField] = useState (''); //[value, setValue]\n  const [monsters , setMonsters] = useState([]);\n  const [filteredMonsters, setFilterMonsters] = useState(monsters);\n\n\n  console.log('render')\n\n  useEffect (()=>{\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then((response)=>response.json())\n    .then((users)=> setMonsters(users))\n  },[])\n\n  useEffect(()=> {\n    const filteredMonsters = monsters.filter((monster)=>{\n      return monster.name.toLocaleLowerCase().includes(searchField)\n    });\n    setFilterMonsters (filteredMonsters)\n    console.log('filtering')\n  }, [monsters, searchField])\n\n  const onSearchChange = (event) => {\n    const searchFieldString = event.target.value.toLocaleLowerCase();\n    setSearchField(searchFieldString);\n  };\n\n\n\n  return (\n    <div className=\"App\">\n      <h1 className= 'app-title'> Monsters Rolodex </h1>\n\n      <SearchBox\n      onChangeHandler = {onSearchChange}\n      placeHolder = ' search monsters '\n      className = ' monsters-search-box '\n      />\n\n      <CardList monsters = { filteredMonsters }/>\n    </div>     \n  )\n}\n\nexport default App\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AAEjC,OAAOC,SAAS,MAAM,8CAA8C;AACpE,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,4CAA4C;AAGjE,SAASC,QAAQ,EAAGC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,WAAW,EAAGC,cAAc,CAAC,GAAGP,QAAQ,CAAE,EAAE,CAAC,CAAC,CAAC;EACtD,MAAM,CAACQ,QAAQ,EAAGC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAACU,gBAAgB,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAACQ,QAAQ,CAAC;EAGhEI,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EAErBZ,SAAS,CAAE,MAAI;IACba,KAAK,CAAC,4CAA4C,CAAC,CAClDC,IAAI,CAAEC,QAAQ,IAAGA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAAEG,KAAK,IAAIT,WAAW,CAACS,KAAK,CAAC,CAAC;EACrC,CAAC,EAAC,EAAE,CAAC;EAELjB,SAAS,CAAC,MAAK;IACb,MAAMS,gBAAgB,GAAGF,QAAQ,CAACW,MAAM,CAAEC,OAAO,IAAG;MAClD,OAAOA,OAAO,CAACC,IAAI,CAACC,iBAAiB,CAAC,CAAC,CAACC,QAAQ,CAACjB,WAAW,CAAC;IAC/D,CAAC,CAAC;IACFK,iBAAiB,CAAED,gBAAgB,CAAC;IACpCE,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;EAC1B,CAAC,EAAE,CAACL,QAAQ,EAAEF,WAAW,CAAC,CAAC;EAE3B,MAAMkB,cAAc,GAAIC,KAAK,IAAK;IAChC,MAAMC,iBAAiB,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAACN,iBAAiB,CAAC,CAAC;IAChEf,cAAc,CAACmB,iBAAiB,CAAC;EACnC,CAAC;EAID,oBACEvB,OAAA;IAAK0B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB3B,OAAA;MAAI0B,SAAS,EAAE,WAAW;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAElD/B,OAAA,CAACL,SAAS;MACVqC,eAAe,EAAIX,cAAe;MAClCY,WAAW,EAAG,mBAAmB;MACjCP,SAAS,EAAG;IAAuB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eAEF/B,OAAA,CAACJ,QAAQ;MAACS,QAAQ,EAAKE;IAAkB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAAA7B,EAAA,CA1CKD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AA4CT,eAAeA,GAAG;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}